# Redis Kubernetes Resources for AI Talent Marketplace
# Contains: ConfigMap, Service, StatefulSet, NetworkPolicy, and PodDisruptionBudget
# Used for: Caching, session management, real-time communication, rate limiting
# Version: redis:7.0-alpine

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ai-talent-marketplace
data:
  redis.conf: |
    # Redis Configuration

    # Memory management
    maxmemory 1500mb
    maxmemory-policy allkeys-lru

    # Performance tuning
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # Persistence settings
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Logging
    loglevel notice
    logfile ""

    # Security (minimal settings, consider enhancing for production)
    protected-mode yes

    # Replication settings
    replicaof no one

    # Client limits
    maxclients 10000

    # I/O limits
    db-filename dump.rdb
    dir /data

    # Advanced settings for high concurrency
    io-threads 4
    io-threads-do-reads yes

    # Latency monitoring
    latency-monitor-threshold 100

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ai-talent-marketplace
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app: redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: ai-talent-marketplace
  labels:
    app: redis
    component: cache
    tier: data
  annotations:
    kubernetes.io/description: "Redis in-memory data store for AI Talent Marketplace"
spec:
  serviceName: "redis"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7.0-alpine
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp3"
      resources:
        requests:
          storage: 20Gi

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: ai-talent-marketplace
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          app: user-service
    - podSelector:
        matchLabels:
          app: payment-service
    - podSelector:
        matchLabels:
          app: job-service
    - podSelector:
        matchLabels:
          app: collaboration-service
    ports:
    - protocol: TCP
      port: 6379

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: ai-talent-marketplace
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: redis