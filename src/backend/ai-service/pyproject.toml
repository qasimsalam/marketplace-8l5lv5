[tool.poetry]
name = "ai-service"
version = "1.0.0"
description = "AI service component for the AI Talent Marketplace platform providing embedding generation, vector search and skill-based matching"
authors = ["AI Talent Marketplace Team <team@aitalentmarketplace.com>"]
readme = "README.md"
repository = "https://github.com/aitalentmarketplace/ai-service"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.0"
uvicorn = "^0.22.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
python-dotenv = "^1.0.0"
openai = "^1.3.0"
numpy = "^1.24.0"
elasticsearch = "^8.10.0"
tenacity = "^8.2.2"
scikit-learn = "^1.3.0"
httpx = "^0.24.1"
python-multipart = "^0.0.6"
prometheus-client = "^0.17.0"
structlog = "^23.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
flake8 = "^6.0.0"
pre-commit = "^3.3.2"
faker = "^18.10.0"
types-requests = "^2.31.0"
types-pyyaml = "^6.0.12"
pytest-mock = "^3.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]
include = "src/.*\\.py$"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
plugins = ["pydantic.mypy"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"