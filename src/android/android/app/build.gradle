apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"

import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js",
    enableHermes: Boolean.parseBoolean(System.getProperty('enableHermes', 'true')),
    bundleInDebug: false,
    root: "../../..",
    jsBundleDir: "build/generated/assets/react/release",
    enableVmCleanup: true,
    architectures: "armeabi-v7a,arm64-v8a,x86,x86_64"
]

android {
    compileSdk rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.aitalentmarketplace"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('release.keystore')
            storePassword System.getenv("RELEASE_STORE_PASSWORD") ?: "FROM_ENV"
            keyAlias System.getenv("RELEASE_KEY_ALIAS") ?: "aitalentmarketplace"
            keyPassword System.getenv("RELEASE_KEY_PASSWORD") ?: "FROM_ENV"
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }
    }
    
    packagingOptions {
        excludes = [
            'META-INF/DEPENDENCIES',
            'META-INF/LICENSE',
            'META-INF/LICENSE.txt',
            'META-INF/license.txt',
            'META-INF/NOTICE',
            'META-INF/NOTICE.txt',
            'META-INF/notice.txt',
            'META-INF/ASL2.0',
            'META-INF/*.kotlin_module'
        ]
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        buildConfig true
    }
}

dependencies {
    implementation "com.facebook.react:react-native:0.72.4"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.appcompat:appcompat:1.4.1"
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.fragment:fragment:1.5.5"
    implementation "androidx.biometric:biometric:1.2.0-alpha05"
    implementation "androidx.security:security-crypto:1.1.0-alpha06"
    
    implementation platform('com.google.firebase:firebase-bom:32.2.2')
    implementation "com.google.firebase:firebase-analytics"
    implementation "com.google.firebase:firebase-messaging:23.1.2"
    implementation "com.google.firebase:firebase-crashlytics"
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"
    
    debugImplementation "com.facebook.flipper:flipper:0.182.0"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:0.182.0"
    debugImplementation "com.facebook.soloader:soloader:0.10.5"
    
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.0.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.8.0"
    
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
}

apply from: "../../node_modules/react-native/react.gradle"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"